spring:
  application:
    name: ticket-system

  # 기본 데이터소스는 쓰기 전용 DB로 설정
  datasource:
    write:
      url: jdbc:mysql://localhost:3346/ticket_system?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
      username: ticket_user
      password: ticket_password
      driver-class-name: com.mysql.cj.jdbc.Driver
    read:
      url: jdbc:mysql://localhost:3366/ticket_system?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
      username: ticket_user
      password: ticket_password
      driver-class-name: com.mysql.cj.jdbc.Driver

  # JPA 설정
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    open-in-view: false

  # Flyway 마이그레이션 설정
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    url: jdbc:mysql://localhost:3346/ticket_system?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
    user: ticket_user
    password: ticket_password

  # Redis 설정
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 10000

  config:
    import: "optional:zookeeper:"

  # 세션 설정
  session:
    store-type: redis
    redis:
      namespace: ticket:session
    timeout: 1h

  # Kafka 설정
  kafka:
    bootstrap-servers: localhost:9093
    consumer:
      group-id: ticket-consumer
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  cloud:
    zookeeper:
      config:
        enabled: true
      connect-string: localhost:2181
    aws:
      endpoint: http://localhost:4566
      region:
        static: ap-northeast-2
      stack:
        auto: false
      credentials:
        access-key: test
        secret-key: test

# 서버 설정
server:
  port: 8082
  servlet:
    context-path: /
    session:
      cookie:
        http-only: true
        secure: false
  tomcat:
    max-threads: 200
    max-connections: 10000

# 로깅 설정
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.hibernate: INFO
    ticket.be: DEBUG

# 액추에이터 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
  prometheus:
    metrics:
      export:
        enabled: true

# 애플리케이션 커스텀 설정
ticket:
  queue:
    wait-timeout-seconds: 1800 # 대기열 타임아웃 30분
    max-active-users: 1000 # 동시 활성 사용자 최대 수
  auth:
    jwt:
      secret-key: your-256-bit-secret-key-here-change-in-production
      token-validity-in-seconds: 86400 # 토큰 유효 기간 (24시간)
  notification:
    sns:
      topic-arn: arn:aws:sns:ap-northeast-2:000000000000:ticket-notifications


springdoc:
  swagger-ui:
    path: /docs
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /api-docs
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json